server.log("text: " + http.agenturl() + "?txt=clients,nodes")
 

 function nodeUpdate(noppes) {
         
    local incomingDataTable = http.get("https://graphite.freifunk-muensterland.de/render?target=sum(nodes.*.nodes_count.nodes_online)&format=json&from=-10min&maxDataPoints=1").sendsync()
    
    local parsed_json = http.jsondecode(incomingDataTable.body)
    local nodes=parsed_json[0].datapoints[0][0];
    
     incomingDataTable = http.get("https://graphite.freifunk-muensterland.de/render?target=sum(nodes.*.clients_online.total)&format=json&from=-10min&maxDataPoints=1").sendsync()
    
     parsed_json = http.jsondecode(incomingDataTable.body)
     local clients=parsed_json[0].datapoints[0][0];
 
    server.log(nodes.tostring())
    server.log(clients.tostring())
    local theText = nodes.tostring()+","+clients.tostring()
    
    device.send("nodeNum",theText)
} 

function requestHandler(request, response) {
  try {
    // check if the user sent led as a query parameter
    if ("txt" in request.query) {
        device.send("txt",request.query.txt); 
      } 
    //device.send("nodeNum",theText)
    // send a response back saying everything was OK.
    response.send(200, "OK");
 
  } catch (ex) {
    response.send(500, "Internal Server Error: " + ex);
  }
}
 
device.on("doNodeUpdate",nodeUpdate);

// register the HTTP handler
http.onrequest(requestHandler);
 
